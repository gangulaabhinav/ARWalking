name: iOS

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build and Test
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          xcodebuild test -scheme iOSARWalkingTests -project Apple/ARWalking.xcodeproj -destination "platform=iOS Simulator,name=$device"
      - name: Unit Test
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          xcodebuild test-without-building -scheme iOSARWalking -project Apple/ARWalking.xcodeproj -destination "platform=iOS Simulator,name=$device"
      - name: UI Test
        run: |
          # device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          # xcodebuild test -scheme iOSARWalkingUITests -project Apple/ARWalking.xcodeproj -destination "platform=iOS Simulator,name=$device" -enableCodeCoverage YES -enablePerformanceTestsDiagnostics YES -resultBundlePath uitest.xcresult -verbose | tee uitest.log
          xcodebuild test -scheme iOSARWalkingUITests -project Apple/ARWalking.xcodeproj -destination "platform=iOS Simulator,name=iPhone 14 Pro" -enableCodeCoverage YES -enablePerformanceTestsDiagnostics YES -resultBundlePath uitest.xcresult -verbose | tee uitest.log
